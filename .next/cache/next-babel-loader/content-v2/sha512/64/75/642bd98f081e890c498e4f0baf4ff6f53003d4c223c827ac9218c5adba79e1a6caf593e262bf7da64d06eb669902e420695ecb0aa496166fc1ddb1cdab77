{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Avatar, Button, IconButton } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth, db } from \"../firebase\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport styled from \"styled-components\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Chat from \"./Chat\";\nimport { useCollection } from \"react-firebase-hooks/firestore\";\nimport * as EmailValidator from \"email-validator\";\n\nfunction Sidebar() {\n  const [user] = useAuthState(auth);\n  const userChatsRef = db.collection(\"chats\").where(\"users\", \"array-contains\", user.email);\n  const [chatsSnapshot, loading] = useCollection(userChatsRef);\n\n  const createChat = () => {\n    const input = prompt(\"Please enter an email address for the user you wish to chat with\");\n    if (!input) return;\n\n    if (EmailValidator.validate(input) && !chatAlreadyExist(input) && input !== user.email) {\n      db.collection(\"chats\").add({\n        users: [user.email, input]\n      });\n    }\n  };\n\n  const chatAlreadyExist = recipientEmail => !!(chatsSnapshot !== null && chatsSnapshot !== void 0 && chatsSnapshot.docs.find(chat => {\n    var _chat$data$users$find;\n\n    return ((_chat$data$users$find = chat.data().users.find(user => user === recipientEmail)) === null || _chat$data$users$find === void 0 ? void 0 : _chat$data$users$find.length) > 0;\n  }));\n\n  return /*#__PURE__*/_jsxs(Container, {\n    children: [/*#__PURE__*/_jsxs(Header, {\n      children: [/*#__PURE__*/_jsx(UserAvatar, {\n        onClick: () => auth.signOut(),\n        src: user.photoURL\n      }), /*#__PURE__*/_jsxs(IconsContainer, {\n        children: [/*#__PURE__*/_jsx(IconButton, {\n          children: /*#__PURE__*/_jsx(ChatIcon, {})\n        }), /*#__PURE__*/_jsx(IconButton, {\n          children: /*#__PURE__*/_jsx(MoreVertIcon, {})\n        })]\n      })]\n    }), /*#__PURE__*/_jsxs(Search, {\n      children: [/*#__PURE__*/_jsx(SearchIcon, {}), /*#__PURE__*/_jsx(SearchInput, {\n        placeholder: \"Search in chats\",\n        type: \"text\"\n      })]\n    }), /*#__PURE__*/_jsx(SidebarButton, {\n      onClick: createChat,\n      children: \"Start a new chat\"\n    }), chatsSnapshot === null || chatsSnapshot === void 0 ? void 0 : chatsSnapshot.docs.map(chat => /*#__PURE__*/_jsx(Chat, {\n      id: chat.id,\n      users: chat.data().users\n    }, chat.id))]\n  });\n}\n\nexport default Sidebar;\nconst Container = styled.div`\n  flex: 0.45;\n  border-right: 1px solid whitesmoke;\n  height: 100vh;\n  min-width: 300px;\n  max-width: 350px;\n  overflow-y: scroll;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n\n  -ms-overflow-style: none; /* IE and Edge */\n  scrollbar-width: none; /* Firefox */\n`;\nconst UserAvatar = styled(Avatar)`\n  cursor: pointer;\n\n  :hover {\n    opacity: 0.8;\n  }\n`;\nconst SidebarButton = styled(Button)`\n  width: 100%;\n  &&& {\n    border-top: 1px solid whitesmoke;\n    border-bottom: 1px solid whitesmoke;\n  }\n`;\nconst Search = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 5px;\n  border-radius: 2px;\n  padding: 20px;\n`;\nconst SearchInput = styled.input`\n  outline-width: 0;\n  border: none;\n  flex: 1;\n`;\nconst Header = styled.div`\n  display: flex;\n  position: sticky;\n  top: 0;\n  background-color: white;\n  z-index: 1;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px;\n  height: 80px;\n  border-bottom: 1px solid whitesmoke;\n`;\nconst IconsContainer = styled.div``;","map":null,"metadata":{},"sourceType":"module"}